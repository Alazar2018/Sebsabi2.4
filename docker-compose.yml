#version: '3.8'
#services:
#  # Discovery Server
#  discovery-server:
#    image: alazdev/service_discovery:latest
#    container_name: discovery-server
#    ports:
#      - "8761:8761"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#
#  # Zookeeper
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.0.1
#    container_name: zookeeper2.0
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    depends_on:
#      - discovery-server
#
#  # Kafka Broker
#  broker:
#    image: confluentinc/cp-kafka:7.0.1
#    container_name: broker2.0
#    ports:
#      - "9092:9092"
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#
#  # Postgres Docker Compose Config
#  postgres-core:
#    container_name: postgres-core
#    image: postgres
#    environment:
#      POSTGRES_DB: sebsabi_core
#      POSTGRES_USER: alazar
#      POSTGRES_PASSWORD: 1524
#      PGDATA: /data/postgres
#    expose:
#      - "5431"
#    ports:
#      - "5431:5431"
#    command: -p 5431
#    restart: unless-stopped
#    depends_on:
#      - discovery-server
#
#  # API Gateway
#  api-gateway:
#    image: alazdev/api_getway:latest
#    container_name: api-gateway
#    ports:
#      - "8080:8080"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
#      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka
#    depends_on:
#      - discovery-server
#
#  # Identity Service
#  identity-service:
#    container_name: identity-service
#    image: alazdev/identity-service:latest
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-core:5431/sebsabi_core
#      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka
#    depends_on:
#      - postgres-core
#      - discovery-server
#
#  # Notification Service
#  notification-service:
#    container_name: notification-service
#    image: alazdev/notification-service:latest
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka
#      - spring.kafka.bootstrap-servers=broker:29092
#    depends_on:
#      - discovery-server
#
#  # Sebsabi Core Service
#  core-service:
#    container_name: core-service
#    image: alazdev/sebsabi_core_service:latest
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-core:5431/sebsabi_core
#      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka
#      - spring.kafka.bootstrap-servers=broker:29092
#    depends_on:
#      - postgres-core
#      - discovery-server
#      - identity-service
#      - broker
#      - notification-service
